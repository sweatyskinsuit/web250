Setter and Getter Methods
- Set property visibility to private
- Define a method to set the property's value
- Define a method to get the property's value

Naive getter and setter:
class Product {
    private $name;

    public function set_names($value) {
        $this->name = $value;
    }
    public function get_name() {
        return $this->name;
    }
}

$p = new Product;
$p->set_name('Birdhouse');
$p->get_name();
// Birdhouse

- Allow access to otherwise private properties
- Useful to regulate access
- Useful for read-only or write-only properties
- Useful for preprocessing values
- Avoid "naive setter" and "naive getter" Methods

Better example:

class Product {
    private $price;

    public function set_price($value) {
        $no_format = preg_replace('/[\$,]/', '', $value);
        $float = floatval($no_format);
        $if($float <= 0) {
            trigger_error('Price must be greater than zero.', E_USER_NOTICE);
            return;
        }
        $this->price = $float;
    }

    public function get_price() {
        return '$' . number_format($this->price, 2);
    }
}
