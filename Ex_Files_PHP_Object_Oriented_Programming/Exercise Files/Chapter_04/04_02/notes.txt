Overloading
- Different meaning in other programming languages
- Better name: "dynamic properties"
- How PHP handles calls to properties and methods which do not exist or are not visible

Example of overloading using a bare object class with no inheritance:

class Product {

}

$p = new Product;
echo $p->name;
// Notice: Undefined property: Product::$name 

$p->name = 'Guitar';
echo $p->name;
// Guitar 

- Get value of undefined property: notice 
- Set value of undefined property: define [property] and set [value]
- Private properties may seem to be visible in subclasses

