Refer to the Parent Class
There are a few different ways that we can refer to static properties and methods
- Student ::$total_students (class name followed by the scope resolution operator, and then either the property or method name)
- self::$total_students (if working inside the class definition, swap out the class name for the keyword itself)
- parent::$total_students (when working in the parent class, either use the actual class name, or swap in a keyword)

- Only works with class methods, not instances
- self:: and parent:: are replacements for ClassName
- Not needed for static properties: already shared
- Useful for calling static methods after overriding them

class Chef {
    public static function
make dinner() {
    echo "Cook food.";
    }
}
class Amateur Chef extends Chef {
    
    public static function
make_dinner() {
    echo "Read recipe.";
    parent::make_dinner();
    echo "Clean up mess.";
    }
}

Chef::make_dinner();
// Cook food.

AmateurChef:make_dinner();
// Read recipe.
// Cook food.
// Clean up mess.

class Image {
    public static $resizing_enabled = true;

    public static function geometry() {
        echo "800x600";
    }
}

class ProfileImage extends Image {

    public static function geometry() {
        if(self::$resizing_enabled) {
            echo "100x100:;
        } else {
            parent::geometry();
        }
    }
}

Image::geometry();
// 800x600 

ProfileImage::geometry();
// 100x100 

Image::$resizing_enabled = false;

ProfileImage::geometry();
// 800x600;


