Class Properties
-Variables to hold object values
-Also called attributes, class variables, instance variables
-Define with var keyword, followed by $variable_name
-Can set an initial value

class Person {
    var $first_name;
    var $last_name;
    var $employed = false;
    var $country = 'None';
}

The way that we set values to these attributes and read them back is by 
first creating an instance of the object and then using arrow notation
to reference the property

$customer = new Person;
$customer->first_name = 'Anna';
$customer->last_name = 'Martin';

echo $customer->first_name;
//Anna

echo $customer->country;
//None

$customer->country = 'United States';
echo $customer->country;
//United States

The arrow notation takes the place of the dollar sign. It knows that we're 
talking about a property and it knows that property is a variable, so 
there's no reason to put a dollar sign in front of it again.

Functions for Properties 

get_class_vars($string)
    returns a list of the properties that defined in this class. We don't
    have to have an instance to do it. We just call the name of the class
    using a string.

get_object_vars($object)
    does the same thing, but as an argument, it takes an instance of the 
    object. Will return the current values for that instance.

property_exists($mixed, $string)
    returns true or false based on whether property exists on the class 
    or on the object

The most important things to remember about properties are that you 
define them inside your class using var, followed by a variable name,
and that when you reference them either to read a value or set a value,
you use the arrow annotation without the dollar sign. Remember that
properties are what make each of our instances unique.